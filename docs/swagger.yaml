basePath: /api/
definitions:
  db.Estudiante:
    properties:
      apellido:
        type: string
      correo:
        type: string
      estudianteID:
        type: integer
      fechaRegistro:
        $ref: '#/definitions/pgtype.Timestamp'
      nombre:
        type: string
      programaAcademico:
        type: string
      semestre:
        $ref: '#/definitions/pgtype.Int4'
      ti:
        $ref: '#/definitions/pgtype.Int4'
    type: object
  handler.CreateEstudianteRequest:
    properties:
      apellido:
        example: Perez
        type: string
      correo:
        example: juan.perez@urosario.edu.co
        type: string
      nombre:
        example: Juan
        type: string
      programa_academico:
        example: Ingenier√≠a de Sistemas
        type: string
      semestre:
        example: 5
        type: integer
      ti:
        example: 1000123456
        type: integer
    type: object
  handler.CreateEstudianteResponse:
    properties:
      estudiante_id:
        type: integer
    type: object
  handler.CreateTutorRequest:
    properties:
      estudiante_id:
        description: Changed to int32 to match SelectEstudianteById param type
        example: 1
        type: integer
    type: object
  handler.CreateTutorResponse:
    properties:
      tutor_id:
        description: Changed to int32 to match sqlc generated type
        type: integer
    type: object
  handler.ErrorResponse:
    properties:
      error:
        example: Descriptive error message
        type: string
    type: object
  handler.LoginResponse:
    properties:
      data:
        description: The actual user data
      user_type:
        description: '"estudiante", "tutor", or "admin"'
        type: string
    type: object
  handler.StudentLoginRequest:
    properties:
      correo:
        description: Correo is the email of the student.
        example: test@urosario.edu.co
        type: string
      ti:
        description: TI is the student's identity number.
        example: 123456789
        type: integer
    type: object
  handler.UnifiedLoginRequest:
    properties:
      correo:
        example: user@urosario.edu.co
        type: string
      password:
        description: For admin login
        example: securepassword123
        type: string
      ti:
        description: For student/tutor login
        example: 123456789
        type: integer
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Int4:
    properties:
      int32:
        type: integer
      valid:
        type: boolean
    type: object
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
host: amazed-flounder-wired.ngrok-free.app
info:
  contact: {}
  description: This is the API for my project.
  termsOfService: http://swagger.io/terms/
  title: Proyecto de Ingenieria de  Datos API
  version: "1.0"
paths:
  /v1/estudiantes:
    post:
      consumes:
      - application/json
      description: Creates a new student record.
      parameters:
      - description: Estudiante Data
        in: body
        name: estudiante
        required: true
        schema:
          $ref: '#/definitions/handler.CreateEstudianteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created student
          schema:
            $ref: '#/definitions/handler.CreateEstudianteResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Failed to create student
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create Estudiante
      tags:
      - Estudiantes
  /v1/login:
    post:
      consumes:
      - application/json
      description: Authenticates a student using their email and TI (Tarjeta de Identidad).
      parameters:
      - description: Login Credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handler.StudentLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated. Returns student details.
          schema:
            $ref: '#/definitions/db.Estudiante'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Invalid credentials (user not found or TI mismatch)
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal server error during login
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Student Login (Legacy)
      tags:
      - Authentication
  /v1/login/{mode}:
    post:
      consumes:
      - application/json
      description: Authenticates users (estudiantes, tutores, or admins) based on
        the mode parameter.
      parameters:
      - description: Login mode
        enum:
        - estudiante
        - tutor
        - admin
        in: path
        name: mode
        required: true
        type: string
      - description: Login Credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handler.UnifiedLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: Invalid request body or mode
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Unified Login
      tags:
      - Authentication
  /v1/tutores:
    post:
      consumes:
      - application/json
      description: Creates a new tutor record using data from an existing student.
      parameters:
      - description: Estudiante ID to become Tutor
        in: body
        name: tutor
        required: true
        schema:
          $ref: '#/definitions/handler.CreateTutorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created tutor
          schema:
            $ref: '#/definitions/handler.CreateTutorResponse'
        "400":
          description: Invalid request body or Estudiante ID
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Estudiante not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Failed to create tutor
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create Tutor from Estudiante
      tags:
      - Tutores
  /v1/tutores/login:
    post:
      consumes:
      - application/json
      description: Authenticates a tutor using their email and TI (Tarjeta de Identidad),
        then fetches tutor-specific data.
      parameters:
      - description: Login Credentials for Tutor (as Student)
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handler.StudentLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated. Returns combined student and tutor
            details.
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Invalid credentials or tutor record not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Tutor Login (Legacy)
      tags:
      - Authentication
schemes:
- http
swagger: "2.0"
